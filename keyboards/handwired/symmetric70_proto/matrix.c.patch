--- quantum/matrix.c	2020-10-18 16:50:22.000000000 +0900
+++ keyboards/handwired/proto_symmetric70/matrix.c	2020-10-18 16:50:21.000000000 +0900
@@ -26,6 +26,12 @@
 #elif (DIODE_DIRECTION == ROW2COL) || (DIODE_DIRECTION == COL2ROW)
 static const pin_t row_pins[MATRIX_ROWS] = MATRIX_ROW_PINS;
 static const pin_t col_pins[MATRIX_COLS] = MATRIX_COL_PINS;
+#  ifdef MATRIX_MUL_SELECT
+static const pin_t col_sel[MATRIX_COLS] = MATRIX_MUL_SEL;
+#    ifndef MATRIX_MUL_SELECT_DELAY
+#      define MATRIX_MUL_SELECT_DELAY 1
+#    endif
+#  endif
 #endif
 
 /* matrix state(1:on, 0:off) */
@@ -83,6 +89,10 @@
 }
 
 static void init_pins(void) {
+#ifdef MATRIX_MUL_SELECT
+    setPinOutput(MATRIX_MUL_SELECT);
+    writePinLow(MATRIX_MUL_SELECT);
+#endif
     unselect_rows();
     for (uint8_t x = 0; x < MATRIX_COLS; x++) {
         setPinInputHigh(col_pins[x]);
@@ -100,6 +110,10 @@
     // For each col...
     for (uint8_t col_index = 0; col_index < MATRIX_COLS; col_index++) {
         // Select the col pin to read (active low)
+#ifdef MATRIX_MUL_SELECT
+        writePin(MATRIX_MUL_SELECT,col_sel[col_index]);
+        __builtin_avr_delay_cycles(MATRIX_MUL_SELECT_DELAY);
+#endif
         uint8_t pin_state = readPin(col_pins[col_index]);
 
         // Populate the matrix row with the state of the col pin
