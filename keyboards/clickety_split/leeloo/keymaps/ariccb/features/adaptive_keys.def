//AK_BOTH_START(KC_Q, KC_EXLM)  // The first letter is the key. Second letter is what the default output is if none of the conditions are met
//   R_BTH(KC_W, KC_B, KC_U)   // for example, this would output "bu" if the keys "qw" were pressed
//   R_FST(KC_A, KC_Q)
//   R_FST(KC_E, KC_Q)
//   R_FST(KC_I, KC_Q)
//   R_FST(KC_O, KC_Q)
//   R_FST(KC_U, KC_Q)
//   R_FST(KC_L, KC_Q)
//   R_FST(KC_H, KC_Q)
//   R_FST(KC_S, KC_Q)
//   R_FST(KC_M, KC_Q)
//   R_FST(KC_SPC, KC_Q)
AK_SND_ONLY_START(KC_L) // fixes LK bigram
  R_SND(KC_J, KC_K)
AK_SND_ONLY_START(KC_J) // fixes JU stretch
  R_SND(KC_L, KC_U)
AK_SND_ONLY_START(KC_S) // fixes SC bigram
  R_SND(KC_V, KC_C)
AK_SND_ONLY_START(KC_C) // fixes CS bigram
  R_SND(KC_X, KC_S)
// AK_SND_ONLY_START(KC_P)   // fixes PT bigram
//   R_SND(KC_F, KC_T)
AK_BOTH_START(KC_P, KC_P) // The first letter is the key. Second letter is what the default output is if none of the conditions are met
  R_BTH(KC_W, KC_P, KC_D) // fixes PD bigram
  R_BTH(KC_F, KC_P, KC_T) // fixes PT bigram
  R_FST(KC_SPC, KC_P)     //fixes p waiting too long after ending the word
  R_FST(KC_QUES, KC_P)     //fixes p waiting too long after ending the word
  R_FST(KC_EXLM, KC_P)     //fixes p waiting too long after ending the word
AK_SND_ONLY_START(KC_F)   // fixes FS bigram
  R_SND(KC_W, KC_S)
AK_SND_ONLY_START(KC_E)   // fixes E, bigram
  R_SND(KC_SLSH, KC_COMM)
AK_SND_ONLY_START(KC_W)   // fixes WR bigram
  R_SND(KC_P, KC_R)
AK_SND_ONLY_START(KC_B)   // fixes BD bigram
  R_SND(KC_W, KC_D)
AK_SND_ONLY_START(KC_PMNS)  // allows (-0) -> (- ) aka dash zero will make dash space
  R_SND(KC_0, KC_SPC)
AK_SND_ONLY_START(KC_EQL)  // allows (=0) -> (= ) aka equals zero will make equals space
  R_SND(KC_0, KC_SPC)
AK_SND_ONLY_START(KC_PPLS)  // allows (+0) -> (+ ) aka plus zero will make plus space
  R_SND(KC_0, KC_SPC)
AK_SND_ONLY_START(KC_PSLS)  // allows (/0) -> (/ ) aka backslash zero will make backslash space
  R_SND(KC_0, KC_SPC)
AK_SND_ONLY_START(KC_PAST)  // allows (*0) -> (* ) aka asterisk zero will make asterisk space
  R_SND(KC_0, KC_SPC)
AK_BOTH_START(KC_U, KC_U)   // The first letter is the key. Second letter is what the default output is if none of the conditions are met
  R_SND(KC_Y, KC_E)         // fixes UE bigram
  R_SND(KC_SCLN, KC_Y)      // allows quickly typing UY now that UY->UE
  R_FST(KC_SPC, KC_U)       //fixes u waiting too long after ending the word
  R_FST(KC_QUES, KC_U)     //fixes d waiting too long after ending the word
  R_FST(KC_EXLM, KC_U)     //fixes d waiting too long after ending the word
AK_BOTH_START(KC_D, KC_D)   // The first letter is the key. Second letter is what the default output is if none of the conditions are met
  R_SND(KC_X, KC_G)         // fixes DG bigram
  R_SND(KC_Z, KC_B)         // fixes DB bigram
  R_FST(KC_SPC, KC_D)       // fixes d waiting too long after ending the word
  R_FST(KC_QUES, KC_D)     //fixes d waiting too long after ending the word
  R_FST(KC_EXLM, KC_D)     //fixes d waiting too long after ending the word