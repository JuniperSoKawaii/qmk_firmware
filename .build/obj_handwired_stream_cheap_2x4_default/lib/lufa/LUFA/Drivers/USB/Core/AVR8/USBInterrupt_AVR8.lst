   1               		.file	"USBInterrupt_AVR8.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.USB_INT_DisableAllInterrupts,"ax",@progbits
  11               	.global	USB_INT_DisableAllInterrupts
  13               	USB_INT_DisableAllInterrupts:
  14               	.LFB85:
  15               		.file 1 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #include "../../../../Common/Common.h"
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #include "../USBInterrupt.h"
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** void USB_INT_DisableAllInterrupts(void)
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
  16               		.loc 1 38 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBCON &= ~((1 << VBUSTE) | (1 << IDTE));
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#elif defined(USB_SERIES_4_AVR)
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBCON &= ~(1 << VBUSTE);
  22               		.loc 1 42 2 view .LVU1
  23               		.loc 1 42 9 is_stmt 0 view .LVU2
  24 0000 E8ED      		ldi r30,lo8(-40)
  25 0002 F0E0      		ldi r31,0
  26 0004 8081      		ld r24,Z
  27 0006 8E7F      		andi r24,lo8(-2)
  28 0008 8083      		st Z,r24
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	OTGIEN  = 0;
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UHIEN   = 0;
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UDIEN   = 0;
  29               		.loc 1 54 2 is_stmt 1 view .LVU3
  30               		.loc 1 54 10 is_stmt 0 view .LVU4
  31 000a 1092 E200 		sts 226,__zero_reg__
  32               	/* epilogue start */
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
  33               		.loc 1 56 1 view .LVU5
  34 000e 0895      		ret
  35               		.cfi_endproc
  36               	.LFE85:
  38               		.section	.text.USB_INT_ClearAllInterrupts,"ax",@progbits
  39               	.global	USB_INT_ClearAllInterrupts
  41               	USB_INT_ClearAllInterrupts:
  42               	.LFB86:
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** void USB_INT_ClearAllInterrupts(void)
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
  43               		.loc 1 59 1 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBINT = 0;
  49               		.loc 1 61 2 view .LVU7
  50               		.loc 1 61 9 is_stmt 0 view .LVU8
  51 0000 1092 DA00 		sts 218,__zero_reg__
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	OTGINT = 0;
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UHINT  = 0;
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UDINT  = 0;
  52               		.loc 1 73 2 is_stmt 1 view .LVU9
  53               		.loc 1 73 9 is_stmt 0 view .LVU10
  54 0004 1092 E100 		sts 225,__zero_reg__
  55               	/* epilogue start */
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
  56               		.loc 1 75 1 view .LVU11
  57 0008 0895      		ret
  58               		.cfi_endproc
  59               	.LFE86:
  61               		.section	.text.__vector_10,"ax",@progbits
  62               	.global	__vector_10
  64               	__vector_10:
  65               	.LFB87:
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** ISR(USB_GEN_vect, ISR_BLOCK)
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
  66               		.loc 1 78 1 is_stmt 1 view -0
  67               		.cfi_startproc
  68 0000 1F92      		push r1
  69               	.LCFI0:
  70               		.cfi_def_cfa_offset 3
  71               		.cfi_offset 1, -2
  72 0002 0F92      		push r0
  73               	.LCFI1:
  74               		.cfi_def_cfa_offset 4
  75               		.cfi_offset 0, -3
  76 0004 0FB6      		in r0,__SREG__
  77 0006 0F92      		push r0
  78 0008 1124      		clr __zero_reg__
  79 000a 2F93      		push r18
  80               	.LCFI2:
  81               		.cfi_def_cfa_offset 5
  82               		.cfi_offset 18, -4
  83 000c 3F93      		push r19
  84               	.LCFI3:
  85               		.cfi_def_cfa_offset 6
  86               		.cfi_offset 19, -5
  87 000e 4F93      		push r20
  88               	.LCFI4:
  89               		.cfi_def_cfa_offset 7
  90               		.cfi_offset 20, -6
  91 0010 5F93      		push r21
  92               	.LCFI5:
  93               		.cfi_def_cfa_offset 8
  94               		.cfi_offset 21, -7
  95 0012 6F93      		push r22
  96               	.LCFI6:
  97               		.cfi_def_cfa_offset 9
  98               		.cfi_offset 22, -8
  99 0014 7F93      		push r23
 100               	.LCFI7:
 101               		.cfi_def_cfa_offset 10
 102               		.cfi_offset 23, -9
 103 0016 8F93      		push r24
 104               	.LCFI8:
 105               		.cfi_def_cfa_offset 11
 106               		.cfi_offset 24, -10
 107 0018 9F93      		push r25
 108               	.LCFI9:
 109               		.cfi_def_cfa_offset 12
 110               		.cfi_offset 25, -11
 111 001a AF93      		push r26
 112               	.LCFI10:
 113               		.cfi_def_cfa_offset 13
 114               		.cfi_offset 26, -12
 115 001c BF93      		push r27
 116               	.LCFI11:
 117               		.cfi_def_cfa_offset 14
 118               		.cfi_offset 27, -13
 119 001e EF93      		push r30
 120               	.LCFI12:
 121               		.cfi_def_cfa_offset 15
 122               		.cfi_offset 30, -14
 123 0020 FF93      		push r31
 124               	.LCFI13:
 125               		.cfi_def_cfa_offset 16
 126               		.cfi_offset 31, -15
 127               	/* prologue: Signal */
 128               	/* frame size = 0 */
 129               	/* stack size = 15 */
 130               	.L__stack_usage = 15
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if !defined(NO_SOF_EVENTS)
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SOFI) && USB_INT_IsEnabled(USB_INT_SOFI))
 131               		.loc 1 81 2 view .LVU13
 132               	.LVL0:
 133               	.LBB90:
 134               	.LBI90:
 135               		.file 2 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX |= (1 << RXSTPE);
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << HSOFE);
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DCONNE);
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DDISCE);
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << RSTE);
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << BCERRE);
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << VBERRE);
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << SRPE);
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt)
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << VBUSTE);
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << IDTE);
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << WAKEUPE);
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SUSPE);
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << EORSTE);
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SOFE);
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX &= ~(1 << RXSTPE);
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << HSOFE);
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DCONNE);
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DDISCE);
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << RSTE);
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << BCERRE);
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << VBERRE);
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << SRPE);
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt)
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << VBUSTI);
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << IDTI);
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << WAKEUPI);
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SUSPI);
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << EORSTI);
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SOFI);
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEINTX &= ~(1 << RXSTPI);
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << HSOFI);
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << DCONNI);
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << DDISCI);
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << RSTI);
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << BCERRI);
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << VBERRI);
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << SRPI);
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_IsEnabled(const uint8_t Interrupt) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSE
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_IsEnabled(const uint8_t Interrupt)
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBCON & (1 << VBUSTE));
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 276:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 277:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 278:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBCON & (1 << IDTE));
 279:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 280:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 281:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << WAKEUPE));
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SUSPE));
 285:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << EORSTE));
 287:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SOFE));
 289:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 290:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UEIENX & (1 << RXSTPE));
 291:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 292:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 293:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 294:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << HSOFE));
 295:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 296:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << DCONNE));
 297:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 298:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << DDISCE));
 299:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 300:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << RSTE));
 301:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 302:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << BCERRE));
 303:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 304:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << VBERRE));
 305:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 306:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << SRPE));
 307:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 308:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 309:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return false;
 310:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 312:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_HasOccurred(const uint8_t Interrupt) ATTR_ALWAYS_INLINE ATTR_WARN_UNU
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_HasOccurred(const uint8_t Interrupt)
 136               		.loc 2 314 23 view .LVU14
 137               	.LBB91:
 315:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 138               		.loc 2 316 5 view .LVU15
 317:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 318:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 319:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBINT & (1 << VBUSTI));
 321:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 322:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 323:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 324:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBINT & (1 << IDTI));
 325:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 326:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 327:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << WAKEUPI));
 329:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << SUSPI));
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << EORSTI));
 333:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 334:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << SOFI));
 139               		.loc 2 334 7 view .LVU16
 140               		.loc 2 334 15 is_stmt 0 view .LVU17
 141 0022 8091 E100 		lds r24,225
 142               	.LVL1:
 143               		.loc 2 334 15 view .LVU18
 144               	.LBE91:
 145               	.LBE90:
 146               		.loc 1 81 5 view .LVU19
 147 0026 82FF      		sbrs r24,2
 148 0028 00C0      		rjmp .L4
 149               	.LVL2:
 150               	.LBB92:
 151               	.LBI92:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 152               		.loc 2 268 23 is_stmt 1 view .LVU20
 153               	.LBB93:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 154               		.loc 2 270 5 view .LVU21
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 155               		.loc 2 288 7 view .LVU22
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 156               		.loc 2 288 15 is_stmt 0 view .LVU23
 157 002a 8091 E200 		lds r24,226
 158               	.LVL3:
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 159               		.loc 2 288 15 view .LVU24
 160               	.LBE93:
 161               	.LBE92:
 162               		.loc 1 81 40 view .LVU25
 163 002e 82FF      		sbrs r24,2
 164 0030 00C0      		rjmp .L4
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SOFI);
 165               		.loc 1 83 3 is_stmt 1 view .LVU26
 166               	.LVL4:
 167               	.LBB94:
 168               	.LBI94:
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 169               		.loc 2 208 23 view .LVU27
 170               	.LBB95:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 171               		.loc 2 210 5 view .LVU28
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 172               		.loc 2 233 7 view .LVU29
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 173               		.loc 2 233 14 is_stmt 0 view .LVU30
 174 0032 8091 E100 		lds r24,225
 175 0036 8B7F      		andi r24,lo8(-5)
 176 0038 8093 E100 		sts 225,r24
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 177               		.loc 2 234 7 is_stmt 1 view .LVU31
 178               	.LVL5:
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 179               		.loc 2 234 7 is_stmt 0 view .LVU32
 180               	.LBE95:
 181               	.LBE94:
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_StartOfFrame();
 182               		.loc 1 85 3 is_stmt 1 view .LVU33
 183 003c 0E94 0000 		call EVENT_USB_Device_StartOfFrame
 184               	.LVL6:
 185               	.L4:
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_VBUSTI) && USB_INT_IsEnabled(USB_INT_VBUSTI))
 186               		.loc 1 90 2 view .LVU34
 187               	.LBB96:
 188               	.LBI96:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 189               		.loc 2 314 23 view .LVU35
 190               	.LBB97:
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 191               		.loc 2 316 5 view .LVU36
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 192               		.loc 2 320 7 view .LVU37
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 193               		.loc 2 320 15 is_stmt 0 view .LVU38
 194 0040 8091 DA00 		lds r24,218
 195               	.LVL7:
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 196               		.loc 2 320 15 view .LVU39
 197               	.LBE97:
 198               	.LBE96:
 199               		.loc 1 90 5 view .LVU40
 200 0044 80FF      		sbrs r24,0
 201 0046 00C0      		rjmp .L5
 202               	.LVL8:
 203               	.LBB98:
 204               	.LBI98:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 205               		.loc 2 268 23 is_stmt 1 view .LVU41
 206               	.LBB99:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 207               		.loc 2 270 5 view .LVU42
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 208               		.loc 2 274 7 view .LVU43
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 209               		.loc 2 274 15 is_stmt 0 view .LVU44
 210 0048 8091 D800 		lds r24,216
 211               	.LVL9:
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 212               		.loc 2 274 15 view .LVU45
 213               	.LBE99:
 214               	.LBE98:
 215               		.loc 1 90 42 view .LVU46
 216 004c 80FF      		sbrs r24,0
 217 004e 00C0      		rjmp .L5
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_VBUSTI);
 218               		.loc 1 92 3 is_stmt 1 view .LVU47
 219               	.LVL10:
 220               	.LBB100:
 221               	.LBI100:
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 222               		.loc 2 208 23 view .LVU48
 223               	.LBB101:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 224               		.loc 2 210 5 view .LVU49
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 225               		.loc 2 214 7 view .LVU50
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 226               		.loc 2 214 14 is_stmt 0 view .LVU51
 227 0050 8091 DA00 		lds r24,218
 228 0054 8E7F      		andi r24,lo8(-2)
 229 0056 8093 DA00 		sts 218,r24
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 230               		.loc 2 215 7 is_stmt 1 view .LVU52
 231               	.LVL11:
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 232               		.loc 2 215 7 is_stmt 0 view .LVU53
 233               	.LBE101:
 234               	.LBE100:
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_VBUS_GetStatus())
 235               		.loc 1 94 3 is_stmt 1 view .LVU54
 236               	.LBB102:
 237               	.LBI102:
 238               		.file 3 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  @{
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			extern "C" {
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__))
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__))
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@{
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Option mask for \ref USB_Init() to keep regulator enabled at all times. Indicates that \ref 
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  should not disable the regulator as it would otherwise. Has no effect if regulator is disabl
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \ref USB_OPT_REG_DISABLED.
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_KEEP_ENABLED           (1 << 3)
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@}
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 239               		.loc 3 177 24 view .LVU55
 240               	.LBB103:
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				{
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 241               		.loc 3 179 6 view .LVU56
 242               		.loc 3 179 15 is_stmt 0 view .LVU57
 243 005a 8091 D900 		lds r24,217
 244               	.LBE103:
 245               	.LBE102:
 246               	.LBB104:
 247               	.LBB105:
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				}
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Attaches the device to the USB bus. This announces the device's presence to any attached
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  USB host, starting the enumeration process. If no host is present, attaching the device
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will allow for enumeration once a host is connected to the device.
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  This is inexplicably also required for proper operation while in host mode, to enable the
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attachment of a device to the host. This is despite the bit being located in the device-mode
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  register and despite the datasheet making no mention of its requirement in host mode.
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void)
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  &= ~(1 << DETACH);
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Main function to initialize and start the USB interface. Once active, the USB interface will
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  allow for device connection to a host when in device mode, or for device enumeration while i
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  host mode.
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  As the USB library relies on interrupts for the device and host mode enumeration processes,
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the user must enable global interrupts before or shortly after this function is called. In
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  device mode, interrupts must be enabled within 500ms of this function being called to ensure
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the host does not time out whilst enumerating the device. In host mode, interrupts may 
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enabled at the application's leisure however enumeration will not begin of an attached devic
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  until after this has occurred.
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  Calling this function when the USB interface is already initialized will cause a complete US
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  interface reset and re-enumeration.
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Mode     Mask indicating what mode the USB interface is to be initialized to, a v
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      from the \ref USB_Modes_t enum.
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      \note This parameter does not exist on devices with only one supported U
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                            mode (device or host).
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Options  Mask indicating the options which should be used when initializing the U
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      interface to control the USB interface's behavior. This should be compri
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      a \c USB_OPT_REG_* mask to control the regulator, a \c USB_OPT_*_PLL mas
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      PLL, and a \c USB_DEVICE_OPT_* mask (when the device mode is enabled) to
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      mode speed.
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only device or host mode is require
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the mode can be statically set in the project makefile by defining the token \c USB_DE
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        (for device mode) or \c USB_HOST_ONLY (for host mode), passing the token to the compil
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        via the -D switch. If the mode is statically set, this parameter does not exist in the
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        function prototype.
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only fixed settings are required,
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the options may be set statically in the same manner as the mode (see the Mode paramet
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        this function). To statically set the USB options, pass in the \c USE_STATIC_OPTIONS t
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        defined to the appropriate options masks. When the options are statically set, this
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        parameter does not exist in the function prototype.
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note The mode parameter does not exist on devices where only one mode is possible, such as 
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        AVR models which only implement the USB device mode in hardware.
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \see \ref Group_Device for the \c USB_DEVICE_OPT_* masks.
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Init(
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Mode
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if (defined(USB_CAN_BE_BOTH) && !defined(USE_STATIC_OPTIONS)) || defined(__DOXYG
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               ,
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #elif (!defined(USB_CAN_BE_BOTH) && defined(USE_STATIC_OPTIONS))
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               void
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Options
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               );
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Shuts down the USB interface. This turns off the USB interface after deallocating all USB FI
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  memory, endpoints and pipes. When turned off, no USB functionality can be used until the int
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  is restarted with the \ref USB_Init() function.
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Disable(void);
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Resets the interface, when already initialized. This will re-enumerate the device if already
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  to a host, or re-enumerate an already attached device when in host mode.
 276:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 277:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_ResetInterface(void);
 278:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 279:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Global Variables: */
 280:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 281:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the mode that the USB interface is currently initialized to, a value from the
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_Modes_t enum.
 283:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 285:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 287:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note When the controller is initialized into UID auto-detection mode, this variable will h
 288:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        currently selected USB mode (i.e. \ref USB_MODE_Device or \ref USB_MODE_Host). If the
 289:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        is fixed into a specific mode (either through the \c USB_DEVICE_ONLY or \c USB_HOST_O
 290:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        options, or a limitation of the USB controller in the chosen device model) this will 
 291:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        a constant of the appropriate value and will never evaluate to \ref USB_MODE_None eve
 292:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        USB interface is not initialized.
 293:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 294:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_CurrentMode;
 295:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_HOST)
 296:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Host
 297:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_DEVICE)
 298:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Device
 299:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 300:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 301:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 302:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the current USB options that the USB interface was initialized with when \ref USB
 303:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  was called. This value will be one of the \c USB_MODE_* masks defined elsewhere in this mod
 304:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 305:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 306:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 307:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 308:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_Options;
 309:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USE_STATIC_OPTIONS)
 310:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_Options USE_STATIC_OPTIONS
 311:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 312:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 313:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Private Interface - For use in library only: */
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	#if !defined(__DOXYGEN__)
 315:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(__INCLUDE_FROM_USB_CONTROLLER_C)
 317:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_DEVICE)
 318:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Device(void);
 319:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 320:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 321:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_HOST)
 322:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Host(void);
 323:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 324:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 325:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 326:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 327:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void)
 329:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 248               		.loc 3 330 12 view .LVU58
 249 005e 19BC      		out 0x29,__zero_reg__
 250               	.LBE105:
 251               	.LBE104:
 252               		.loc 1 94 6 view .LVU59
 253 0060 80FF      		sbrs r24,0
 254 0062 00C0      		rjmp .L6
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			if (!(USB_Options & USB_OPT_MANUAL_PLL))
 255               		.loc 1 96 4 is_stmt 1 view .LVU60
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			{
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 				USB_PLL_On();
 256               		.loc 1 98 5 view .LVU61
 257               	.LBB107:
 258               	.LBI104:
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 259               		.loc 3 328 23 view .LVU62
 260               	.LBB106:
 261               		.loc 3 330 5 view .LVU63
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 262               		.loc 3 331 5 view .LVU64
 263               		.loc 3 331 12 is_stmt 0 view .LVU65
 264 0064 82E0      		ldi r24,lo8(2)
 265 0066 89BD      		out 0x29,r24
 266               	.L7:
 267               	.LBE106:
 268               	.LBE107:
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 				while (!(USB_PLL_IsReady()));
 269               		.loc 1 99 33 is_stmt 1 discriminator 1 view .LVU66
 270               		.loc 1 99 11 discriminator 1 view .LVU67
 271               	.LBB108:
 272               	.LBI108:
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 333:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 334:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void)
 336:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 338:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 339:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 340:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 341:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void)
 273               		.loc 3 341 23 discriminator 1 view .LVU68
 274               	.LBB109:
 342:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				return ((PLLCSR & (1 << PLOCK)) ? true : false);
 275               		.loc 3 343 5 discriminator 1 view .LVU69
 276               	.LBE109:
 277               	.LBE108:
 278               		.loc 1 99 11 is_stmt 0 discriminator 1 view .LVU70
 279 0068 09B4      		in __tmp_reg__,0x29
 280 006a 00FE      		sbrs __tmp_reg__,0
 281 006c 00C0      		rjmp .L7
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			}
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_DeviceState = DEVICE_STATE_Powered;
 282               		.loc 1 102 4 is_stmt 1 view .LVU71
 283               		.loc 1 102 20 is_stmt 0 view .LVU72
 284 006e 81E0      		ldi r24,lo8(1)
 285 0070 8093 0000 		sts USB_DeviceState,r24
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Connect();
 286               		.loc 1 103 4 is_stmt 1 view .LVU73
 287 0074 0E94 0000 		call EVENT_USB_Device_Connect
 288               	.LVL12:
 289               	.L5:
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		else
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			if (!(USB_Options & USB_OPT_MANUAL_PLL))
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			  USB_PLL_Off();
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_DeviceState = DEVICE_STATE_Unattached;
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Disconnect();
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SUSPI) && USB_INT_IsEnabled(USB_INT_SUSPI))
 290               		.loc 1 116 2 view .LVU74
 291               	.LBB110:
 292               	.LBI110:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 293               		.loc 2 314 23 view .LVU75
 294               	.LBB111:
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 295               		.loc 2 316 5 view .LVU76
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 296               		.loc 2 330 7 view .LVU77
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 297               		.loc 2 330 15 is_stmt 0 view .LVU78
 298 0078 8091 E100 		lds r24,225
 299               	.LVL13:
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 300               		.loc 2 330 15 view .LVU79
 301               	.LBE111:
 302               	.LBE110:
 303               		.loc 1 116 5 view .LVU80
 304 007c 80FF      		sbrs r24,0
 305 007e 00C0      		rjmp .L8
 306               	.LVL14:
 307               	.LBB112:
 308               	.LBI112:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 309               		.loc 2 268 23 is_stmt 1 view .LVU81
 310               	.LBB113:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 311               		.loc 2 270 5 view .LVU82
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 312               		.loc 2 284 7 view .LVU83
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 313               		.loc 2 284 15 is_stmt 0 view .LVU84
 314 0080 8091 E200 		lds r24,226
 315               	.LVL15:
 284:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 316               		.loc 2 284 15 view .LVU85
 317               	.LBE113:
 318               	.LBE112:
 319               		.loc 1 116 41 view .LVU86
 320 0084 80FF      		sbrs r24,0
 321 0086 00C0      		rjmp .L8
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SUSPI);
 322               		.loc 1 118 3 is_stmt 1 view .LVU87
 323               	.LVL16:
 324               	.LBB114:
 325               	.LBI114:
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 326               		.loc 2 148 23 view .LVU88
 327               	.LBB115:
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 328               		.loc 2 150 5 view .LVU89
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 329               		.loc 2 167 7 view .LVU90
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 330               		.loc 2 167 14 is_stmt 0 view .LVU91
 331 0088 8091 E200 		lds r24,226
 332 008c 8E7F      		andi r24,lo8(-2)
 333 008e 8093 E200 		sts 226,r24
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 334               		.loc 2 168 7 is_stmt 1 view .LVU92
 335               	.LVL17:
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 336               		.loc 2 168 7 is_stmt 0 view .LVU93
 337               	.LBE115:
 338               	.LBE114:
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_WAKEUPI);
 339               		.loc 1 119 3 is_stmt 1 view .LVU94
 340               	.LBB116:
 341               	.LBI116:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 342               		.loc 2 88 23 view .LVU95
 343               	.LBB117:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 344               		.loc 2 90 5 view .LVU96
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 345               		.loc 2 104 7 view .LVU97
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 346               		.loc 2 104 14 is_stmt 0 view .LVU98
 347 0092 8091 E200 		lds r24,226
 348 0096 8061      		ori r24,lo8(16)
 349 0098 8093 E200 		sts 226,r24
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 350               		.loc 2 105 7 is_stmt 1 view .LVU99
 351               	.LVL18:
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 352               		.loc 2 105 7 is_stmt 0 view .LVU100
 353               	.LBE117:
 354               	.LBE116:
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CLK_Freeze();
 355               		.loc 1 121 3 is_stmt 1 view .LVU101
 356               	.LBB118:
 357               	.LBI118:
 344:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 345:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 346:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
 347:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void)
 348:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 349:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 350:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON |=  (1 << UVREGE);
 351:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 352:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  &= ~(1 << REGDIS);
 353:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 354:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 355:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 356:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void) ATTR_ALWAYS_INLINE;
 357:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void)
 358:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 359:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 360:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON &= ~(1 << UVREGE);
 361:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 362:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  |=  (1 << REGDIS);
 363:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 364:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 365:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 366:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 367:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
 368:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void)
 369:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 370:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << OTGPADE);
 371:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 372:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 373:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
 374:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void)
 375:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 376:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << OTGPADE);
 377:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 378:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 379:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 380:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
 381:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void)
 358               		.loc 3 381 23 view .LVU102
 359               	.LBB119:
 382:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 383:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << FRZCLK);
 360               		.loc 3 383 5 view .LVU103
 361               		.loc 3 383 12 is_stmt 0 view .LVU104
 362 009c 8091 D800 		lds r24,216
 363 00a0 8062      		ori r24,lo8(32)
 364 00a2 8093 D800 		sts 216,r24
 365               	.LBE119:
 366               	.LBE118:
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 367               		.loc 1 123 3 is_stmt 1 view .LVU105
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_PLL_Off();
 368               		.loc 1 124 5 view .LVU106
 369               	.LBB120:
 370               	.LBI120:
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 371               		.loc 3 335 23 view .LVU107
 372               	.LBB121:
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 373               		.loc 3 337 5 view .LVU108
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 374               		.loc 3 337 12 is_stmt 0 view .LVU109
 375 00a6 19BC      		out 0x29,__zero_reg__
 376               	.LBE121:
 377               	.LBE120:
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState = DEVICE_STATE_Unattached;
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Disconnect();
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#else
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState = DEVICE_STATE_Suspended;
 378               		.loc 1 130 3 is_stmt 1 view .LVU110
 379               		.loc 1 130 19 is_stmt 0 view .LVU111
 380 00a8 85E0      		ldi r24,lo8(5)
 381 00aa 8093 0000 		sts USB_DeviceState,r24
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Suspend();
 382               		.loc 1 131 3 is_stmt 1 view .LVU112
 383 00ae 0E94 0000 		call EVENT_USB_Device_Suspend
 384               	.LVL19:
 385               	.L8:
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_WAKEUPI) && USB_INT_IsEnabled(USB_INT_WAKEUPI))
 386               		.loc 1 135 2 view .LVU113
 387               	.LBB122:
 388               	.LBI122:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 389               		.loc 2 314 23 view .LVU114
 390               	.LBB123:
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 391               		.loc 2 316 5 view .LVU115
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 392               		.loc 2 328 7 view .LVU116
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 393               		.loc 2 328 15 is_stmt 0 view .LVU117
 394 00b2 8091 E100 		lds r24,225
 395               	.LVL20:
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 396               		.loc 2 328 15 view .LVU118
 397               	.LBE123:
 398               	.LBE122:
 399               		.loc 1 135 5 view .LVU119
 400 00b6 84FF      		sbrs r24,4
 401 00b8 00C0      		rjmp .L9
 402               	.LVL21:
 403               	.LBB124:
 404               	.LBI124:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 405               		.loc 2 268 23 is_stmt 1 view .LVU120
 406               	.LBB125:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 407               		.loc 2 270 5 view .LVU121
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 408               		.loc 2 282 7 view .LVU122
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 409               		.loc 2 282 15 is_stmt 0 view .LVU123
 410 00ba 8091 E200 		lds r24,226
 411               	.LVL22:
 282:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 412               		.loc 2 282 15 view .LVU124
 413               	.LBE125:
 414               	.LBE124:
 415               		.loc 1 135 43 view .LVU125
 416 00be 84FF      		sbrs r24,4
 417 00c0 00C0      		rjmp .L9
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 418               		.loc 1 137 3 is_stmt 1 view .LVU126
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_PLL_On();
 419               		.loc 1 139 4 view .LVU127
 420               	.LBB126:
 421               	.LBI126:
 328:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 422               		.loc 3 328 23 view .LVU128
 423               	.LBB127:
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 424               		.loc 3 330 5 view .LVU129
 330:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 425               		.loc 3 330 12 is_stmt 0 view .LVU130
 426 00c2 19BC      		out 0x29,__zero_reg__
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 427               		.loc 3 331 5 is_stmt 1 view .LVU131
 331:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 428               		.loc 3 331 12 is_stmt 0 view .LVU132
 429 00c4 82E0      		ldi r24,lo8(2)
 430 00c6 89BD      		out 0x29,r24
 431               	.L10:
 432               	.LBE127:
 433               	.LBE126:
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			while (!(USB_PLL_IsReady()));
 434               		.loc 1 140 32 is_stmt 1 discriminator 1 view .LVU133
 435               		.loc 1 140 10 discriminator 1 view .LVU134
 436               	.LBB128:
 437               	.LBI128:
 341:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 438               		.loc 3 341 23 discriminator 1 view .LVU135
 439               	.LBB129:
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 440               		.loc 3 343 5 discriminator 1 view .LVU136
 343:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 441               		.loc 3 343 14 is_stmt 0 discriminator 1 view .LVU137
 442 00c8 89B5      		in r24,0x29
 443               	.LBE129:
 444               	.LBE128:
 445               		.loc 1 140 10 discriminator 1 view .LVU138
 446 00ca 982F      		mov r25,r24
 447 00cc 9170      		andi r25,lo8(1)
 448 00ce 80FF      		sbrs r24,0
 449 00d0 00C0      		rjmp .L10
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CLK_Unfreeze();
 450               		.loc 1 143 3 is_stmt 1 view .LVU139
 451               	.LBB130:
 452               	.LBI130:
 384:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 385:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 386:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
 387:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void)
 453               		.loc 3 387 23 view .LVU140
 454               	.LBB131:
 388:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 389:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << FRZCLK);
 455               		.loc 3 389 5 view .LVU141
 456               		.loc 3 389 12 is_stmt 0 view .LVU142
 457 00d2 8091 D800 		lds r24,216
 458 00d6 8F7D      		andi r24,lo8(-33)
 459 00d8 8093 D800 		sts 216,r24
 460               	.LBE131:
 461               	.LBE130:
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_WAKEUPI);
 462               		.loc 1 145 3 is_stmt 1 view .LVU143
 463               	.LVL23:
 464               	.LBB132:
 465               	.LBI132:
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 466               		.loc 2 208 23 view .LVU144
 467               	.LBB133:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 468               		.loc 2 210 5 view .LVU145
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 469               		.loc 2 224 7 view .LVU146
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 470               		.loc 2 224 14 is_stmt 0 view .LVU147
 471 00dc 8091 E100 		lds r24,225
 472 00e0 8F7E      		andi r24,lo8(-17)
 473 00e2 8093 E100 		sts 225,r24
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 474               		.loc 2 225 7 is_stmt 1 view .LVU148
 475               	.LVL24:
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 476               		.loc 2 225 7 is_stmt 0 view .LVU149
 477               	.LBE133:
 478               	.LBE132:
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_WAKEUPI);
 479               		.loc 1 147 3 is_stmt 1 view .LVU150
 480               	.LBB134:
 481               	.LBI134:
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 482               		.loc 2 148 23 view .LVU151
 483               	.LBB135:
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 484               		.loc 2 150 5 view .LVU152
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 485               		.loc 2 164 7 view .LVU153
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 486               		.loc 2 164 14 is_stmt 0 view .LVU154
 487 00e6 8091 E200 		lds r24,226
 488 00ea 8F7E      		andi r24,lo8(-17)
 489 00ec 8093 E200 		sts 226,r24
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 490               		.loc 2 165 7 is_stmt 1 view .LVU155
 491               	.LVL25:
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 492               		.loc 2 165 7 is_stmt 0 view .LVU156
 493               	.LBE135:
 494               	.LBE134:
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_SUSPI);
 495               		.loc 1 148 3 is_stmt 1 view .LVU157
 496               	.LBB136:
 497               	.LBI136:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 498               		.loc 2 88 23 view .LVU158
 499               	.LBB137:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 500               		.loc 2 90 5 view .LVU159
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 501               		.loc 2 107 7 view .LVU160
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 502               		.loc 2 107 14 is_stmt 0 view .LVU161
 503 00f0 8091 E200 		lds r24,226
 504 00f4 8160      		ori r24,lo8(1)
 505 00f6 8093 E200 		sts 226,r24
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 506               		.loc 2 108 7 is_stmt 1 view .LVU162
 507               	.LVL26:
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 508               		.loc 2 108 7 is_stmt 0 view .LVU163
 509               	.LBE137:
 510               	.LBE136:
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_Device_ConfigurationNumber)
 511               		.loc 1 150 3 is_stmt 1 view .LVU164
 512               		.loc 1 150 6 is_stmt 0 view .LVU165
 513 00fa 8091 0000 		lds r24,USB_Device_ConfigurationNumber
 514 00fe 8823      		tst r24
 515 0100 01F4      		brne .+2
 516 0102 00C0      		rjmp .L11
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_DeviceState = DEVICE_STATE_Configured;
 517               		.loc 1 151 5 is_stmt 1 view .LVU166
 518               		.loc 1 151 21 is_stmt 0 view .LVU167
 519 0104 84E0      		ldi r24,lo8(4)
 520 0106 8093 0000 		sts USB_DeviceState,r24
 521               	.L12:
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		else
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Addressed : DEVICE_STATE_Powered;
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Connect();
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#else
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_WakeUp();
 522               		.loc 1 158 3 is_stmt 1 view .LVU168
 523 010a 0E94 0000 		call EVENT_USB_Device_WakeUp
 524               	.LVL27:
 525               	.L9:
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_EORSTI) && USB_INT_IsEnabled(USB_INT_EORSTI))
 526               		.loc 1 162 2 view .LVU169
 527               	.LBB138:
 528               	.LBI138:
 314:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 529               		.loc 2 314 23 view .LVU170
 530               	.LBB139:
 316:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 531               		.loc 2 316 5 view .LVU171
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 532               		.loc 2 332 7 view .LVU172
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 533               		.loc 2 332 15 is_stmt 0 view .LVU173
 534 010e 8091 E100 		lds r24,225
 535               	.LVL28:
 332:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 536               		.loc 2 332 15 view .LVU174
 537               	.LBE139:
 538               	.LBE138:
 539               		.loc 1 162 5 view .LVU175
 540 0112 83FF      		sbrs r24,3
 541 0114 00C0      		rjmp .L3
 542               	.LVL29:
 543               	.LBB140:
 544               	.LBI140:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 545               		.loc 2 268 23 is_stmt 1 view .LVU176
 546               	.LBB141:
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 547               		.loc 2 270 5 view .LVU177
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 548               		.loc 2 286 7 view .LVU178
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 549               		.loc 2 286 15 is_stmt 0 view .LVU179
 550 0116 8091 E200 		lds r24,226
 551               	.LVL30:
 286:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 552               		.loc 2 286 15 view .LVU180
 553               	.LBE141:
 554               	.LBE140:
 555               		.loc 1 162 42 view .LVU181
 556 011a 83FF      		sbrs r24,3
 557 011c 00C0      		rjmp .L3
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_EORSTI);
 558               		.loc 1 164 3 is_stmt 1 view .LVU182
 559               	.LVL31:
 560               	.LBB142:
 561               	.LBI142:
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 562               		.loc 2 208 23 view .LVU183
 563               	.LBB143:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 564               		.loc 2 210 5 view .LVU184
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 565               		.loc 2 230 7 view .LVU185
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 566               		.loc 2 230 14 is_stmt 0 view .LVU186
 567 011e 8091 E100 		lds r24,225
 568 0122 877F      		andi r24,lo8(-9)
 569 0124 8093 E100 		sts 225,r24
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 570               		.loc 2 231 7 is_stmt 1 view .LVU187
 571               	.LVL32:
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 572               		.loc 2 231 7 is_stmt 0 view .LVU188
 573               	.LBE143:
 574               	.LBE142:
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState                = DEVICE_STATE_Default;
 575               		.loc 1 166 3 is_stmt 1 view .LVU189
 576               		.loc 1 166 34 is_stmt 0 view .LVU190
 577 0128 82E0      		ldi r24,lo8(2)
 578 012a 8093 0000 		sts USB_DeviceState,r24
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Device_ConfigurationNumber = 0;
 579               		.loc 1 167 3 is_stmt 1 view .LVU191
 580               		.loc 1 167 34 is_stmt 0 view .LVU192
 581 012e 1092 0000 		sts USB_Device_ConfigurationNumber,__zero_reg__
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SUSPI);
 582               		.loc 1 169 3 is_stmt 1 view .LVU193
 583               	.LVL33:
 584               	.LBB144:
 585               	.LBI144:
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 586               		.loc 2 208 23 view .LVU194
 587               	.LBB145:
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 588               		.loc 2 210 5 view .LVU195
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 589               		.loc 2 227 7 view .LVU196
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 590               		.loc 2 227 14 is_stmt 0 view .LVU197
 591 0132 8091 E100 		lds r24,225
 592 0136 8E7F      		andi r24,lo8(-2)
 593 0138 8093 E100 		sts 225,r24
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 594               		.loc 2 228 7 is_stmt 1 view .LVU198
 595               	.LVL34:
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 596               		.loc 2 228 7 is_stmt 0 view .LVU199
 597               	.LBE145:
 598               	.LBE144:
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SUSPI);
 599               		.loc 1 170 3 is_stmt 1 view .LVU200
 600               	.LBB146:
 601               	.LBI146:
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 602               		.loc 2 148 23 view .LVU201
 603               	.LBB147:
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 604               		.loc 2 150 5 view .LVU202
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 605               		.loc 2 167 7 view .LVU203
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 606               		.loc 2 167 14 is_stmt 0 view .LVU204
 607 013c 8091 E200 		lds r24,226
 608 0140 8E7F      		andi r24,lo8(-2)
 609 0142 8093 E200 		sts 226,r24
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 610               		.loc 2 168 7 is_stmt 1 view .LVU205
 611               	.LVL35:
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 612               		.loc 2 168 7 is_stmt 0 view .LVU206
 613               	.LBE147:
 614               	.LBE146:
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_WAKEUPI);
 615               		.loc 1 171 3 is_stmt 1 view .LVU207
 616               	.LBB148:
 617               	.LBI148:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 618               		.loc 2 88 23 view .LVU208
 619               	.LBB149:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 620               		.loc 2 90 5 view .LVU209
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 621               		.loc 2 104 7 view .LVU210
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 622               		.loc 2 104 14 is_stmt 0 view .LVU211
 623 0146 8091 E200 		lds r24,226
 624 014a 8061      		ori r24,lo8(16)
 625 014c 8093 E200 		sts 226,r24
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 626               		.loc 2 105 7 is_stmt 1 view .LVU212
 627               	.LVL36:
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 628               		.loc 2 105 7 is_stmt 0 view .LVU213
 629               	.LBE149:
 630               	.LBE148:
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		Endpoint_ConfigureEndpoint(ENDPOINT_CONTROLEP, EP_TYPE_CONTROL,
 631               		.loc 1 173 3 is_stmt 1 view .LVU214
 632               	.LBB150:
 633               	.LBI150:
 634               		.file 4 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 635               		.loc 4 200 23 view .LVU215
 636               	.LBB151:
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 637               		.loc 4 205 5 view .LVU216
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 638               		.loc 4 207 5 view .LVU217
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 639               		.loc 4 210 5 view .LVU218
 640               		.loc 4 210 5 is_stmt 0 view .LVU219
 641               	.LBE151:
 642               	.LBE150:
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 643               		.loc 4 97 5 is_stmt 1 view .LVU220
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 644               		.loc 4 98 5 view .LVU221
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 645               		.loc 4 100 5 view .LVU222
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 646               		.loc 4 100 11 view .LVU223
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 647               		.loc 4 106 5 view .LVU224
 648               	.LBB153:
 649               	.LBB152:
 650               		.loc 4 210 12 is_stmt 0 view .LVU225
 651 0150 42E0      		ldi r20,lo8(2)
 652 0152 60E0      		ldi r22,0
 653 0154 80E0      		ldi r24,0
 654 0156 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 655               	.LVL37:
 656               		.loc 4 210 12 view .LVU226
 657               	.LBE152:
 658               	.LBE153:
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		                           USB_Device_ControlEndpointSize, 1);
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(INTERRUPT_CONTROL_ENDPOINT)
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_RXSTPI);
 659               		.loc 1 177 3 is_stmt 1 view .LVU227
 660               	.LBB154:
 661               	.LBI154:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 662               		.loc 2 88 23 view .LVU228
 663               	.LBB155:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 664               		.loc 2 90 5 view .LVU229
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 665               		.loc 2 116 7 view .LVU230
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 666               		.loc 2 116 14 is_stmt 0 view .LVU231
 667 015a 8091 F000 		lds r24,240
 668 015e 8860      		ori r24,lo8(8)
 669 0160 8093 F000 		sts 240,r24
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 670               		.loc 2 117 7 is_stmt 1 view .LVU232
 671               	.LVL38:
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 672               		.loc 2 117 7 is_stmt 0 view .LVU233
 673               	.LBE155:
 674               	.LBE154:
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Reset();
 675               		.loc 1 180 3 is_stmt 1 view .LVU234
 676 0164 0E94 0000 		call EVENT_USB_Device_Reset
 677               	.LVL39:
 678               	.L3:
 679               	/* epilogue start */
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if !defined(NO_SOF_EVENTS)
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_HSOFI) && USB_INT_IsEnabled(USB_INT_HSOFI))
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_HSOFI);
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_StartOfFrame();
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_DDISCI) && USB_INT_IsEnabled(USB_INT_DDISCI))
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_DDISCI);
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_DCONNI);
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_DDISCI);
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_VBERRI) && USB_INT_IsEnabled(USB_INT_VBERRI))
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_VBERRI);
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Host_VBUS_Manual_Off();
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Host_VBUS_Auto_Off();
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_HostError(HOST_ERROR_VBusVoltageDip);
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_HostState = HOST_STATE_Unattached;
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SRPI) && USB_INT_IsEnabled(USB_INT_SRPI))
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SRPI);
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SRPI);
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceAttached();
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_DDISCI);
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_HostState = HOST_STATE_Powered;
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_BCERRI) && USB_INT_IsEnabled(USB_INT_BCERRI))
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_BCERRI);
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceEnumerationFailed(HOST_ENUMERROR_NoDeviceDetected, 0);
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_IDTI) && USB_INT_IsEnabled(USB_INT_IDTI))
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_IDTI);
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_DeviceState != DEVICE_STATE_Unattached)
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  EVENT_USB_Device_Disconnect();
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_HostState != HOST_STATE_Unattached)
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  EVENT_USB_Host_DeviceUnattached();
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CurrentMode = USB_GetUSBModeFromUID();
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_UIDChange();
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
 680               		.loc 1 258 1 is_stmt 0 view .LVU235
 681 0168 FF91      		pop r31
 682 016a EF91      		pop r30
 683 016c BF91      		pop r27
 684 016e AF91      		pop r26
 685 0170 9F91      		pop r25
 686 0172 8F91      		pop r24
 687 0174 7F91      		pop r23
 688 0176 6F91      		pop r22
 689 0178 5F91      		pop r21
 690 017a 4F91      		pop r20
 691 017c 3F91      		pop r19
 692 017e 2F91      		pop r18
 693 0180 0F90      		pop r0
 694 0182 0FBE      		out __SREG__,r0
 695 0184 0F90      		pop r0
 696 0186 1F90      		pop r1
 697 0188 1895      		reti
 698               	.L6:
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			  USB_PLL_Off();
 699               		.loc 1 107 4 is_stmt 1 view .LVU236
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 700               		.loc 1 108 6 view .LVU237
 701               	.LBB156:
 702               	.LBI156:
 335:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 703               		.loc 3 335 23 view .LVU238
 704               	.LBB157:
 337:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 705               		.loc 3 337 5 view .LVU239
 706               	.LBE157:
 707               	.LBE156:
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Disconnect();
 708               		.loc 1 110 4 view .LVU240
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Disconnect();
 709               		.loc 1 110 20 is_stmt 0 view .LVU241
 710 018a 1092 0000 		sts USB_DeviceState,__zero_reg__
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 711               		.loc 1 111 4 is_stmt 1 view .LVU242
 712 018e 0E94 0000 		call EVENT_USB_Device_Disconnect
 713               	.LVL40:
 714 0192 00C0      		rjmp .L5
 715               	.L11:
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 716               		.loc 1 153 5 view .LVU243
 717               	.LBB158:
 718               	.LBI158:
 719               		.file 5 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h"
   1:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
   2:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2019.
   4:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
   5:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
   8:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
   9:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
  10:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  12:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  21:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
  30:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  31:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  35:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  38:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  39:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  43:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  45:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  47:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  48:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  51:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  58:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  63:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  68:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  72:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  76:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  80:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  97:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 103:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#ifndef USE_INTERNAL_SERIAL
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 					#define USE_INTERNAL_SERIAL         0xDC
 118:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#endif
 119:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 120:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 121:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 122:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 123:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     80
 124:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 125:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 126:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 127:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 128:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0x0E
 129:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#else
 130:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#undef	USE_INTERNAL_SERIAL
 131:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL             NO_DESCRIPTOR
 132:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 133:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS     0
 134:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS   0
 135:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 136:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 137:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 138:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 139:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 140:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 142:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 143:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 144:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 145:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 146:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 147:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 149:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 151:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 152:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 154:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 155:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 156:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 157:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 158:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 159:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 160:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 161:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 162:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 163:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 164:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 165:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 166:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 167:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 168:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 169:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 170:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 171:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 172:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 173:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 174:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 175:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 178:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 179:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 180:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				{
 181:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 182:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				}
 183:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 184:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Disables the device mode Start Of Frame events. When disabled, this stops the firing of the
 185:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event when enumerated in device mode.
 186:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 187:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 188:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 189:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void) ATTR_ALWAYS_INLINE;
 190:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void)
 191:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				{
 192:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Disable(USB_INT_SOFI);
 193:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				}
 194:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 195:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 196:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Private Interface - For use in library only: */
 197:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	#if !defined(__DOXYGEN__)
 198:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 199:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_DEVICE_OPT_LOWSPEED)
 200:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void) ATTR_ALWAYS_INLINE;
 201:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void)
 202:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 203:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDCON |=  (1 << LSM);
 204:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 205:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 206:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
 207:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void)
 208:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 209:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDCON &= ~(1 << LSM);
 210:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				(void)Address;
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDADDR |= (1 << ADDEN);
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void)
 720               		.loc 5 228 23 view .LVU244
 721               	.LBB159:
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				return (UDADDR & (1 << ADDEN));
 722               		.loc 5 230 5 view .LVU245
 723               		.loc 5 230 13 is_stmt 0 view .LVU246
 724 0194 8091 E300 		lds r24,227
 725               	.LBE159:
 726               	.LBE158:
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 727               		.loc 1 153 21 view .LVU247
 728 0198 87FD      		sbrc r24,7
 729 019a 93E0      		ldi r25,lo8(3)
 730               	.L13:
 153:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 731               		.loc 1 153 21 discriminator 4 view .LVU248
 732 019c 9093 0000 		sts USB_DeviceState,r25
 733 01a0 00C0      		rjmp .L12
 734               		.cfi_endproc
 735               	.LFE87:
 737               		.section	.text.__vector_11,"ax",@progbits
 738               	.global	__vector_11
 740               	__vector_11:
 741               	.LFB88:
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #if defined(INTERRUPT_CONTROL_ENDPOINT) && defined(USB_CAN_BE_DEVICE)
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** ISR(USB_COM_vect, ISR_BLOCK)
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
 742               		.loc 1 262 1 is_stmt 1 view -0
 743               		.cfi_startproc
 744 0000 1F92      		push r1
 745               	.LCFI14:
 746               		.cfi_def_cfa_offset 3
 747               		.cfi_offset 1, -2
 748 0002 0F92      		push r0
 749               	.LCFI15:
 750               		.cfi_def_cfa_offset 4
 751               		.cfi_offset 0, -3
 752 0004 0FB6      		in r0,__SREG__
 753 0006 0F92      		push r0
 754 0008 1124      		clr __zero_reg__
 755 000a 2F93      		push r18
 756               	.LCFI16:
 757               		.cfi_def_cfa_offset 5
 758               		.cfi_offset 18, -4
 759 000c 3F93      		push r19
 760               	.LCFI17:
 761               		.cfi_def_cfa_offset 6
 762               		.cfi_offset 19, -5
 763 000e 4F93      		push r20
 764               	.LCFI18:
 765               		.cfi_def_cfa_offset 7
 766               		.cfi_offset 20, -6
 767 0010 5F93      		push r21
 768               	.LCFI19:
 769               		.cfi_def_cfa_offset 8
 770               		.cfi_offset 21, -7
 771 0012 6F93      		push r22
 772               	.LCFI20:
 773               		.cfi_def_cfa_offset 9
 774               		.cfi_offset 22, -8
 775 0014 7F93      		push r23
 776               	.LCFI21:
 777               		.cfi_def_cfa_offset 10
 778               		.cfi_offset 23, -9
 779 0016 8F93      		push r24
 780               	.LCFI22:
 781               		.cfi_def_cfa_offset 11
 782               		.cfi_offset 24, -10
 783 0018 9F93      		push r25
 784               	.LCFI23:
 785               		.cfi_def_cfa_offset 12
 786               		.cfi_offset 25, -11
 787 001a AF93      		push r26
 788               	.LCFI24:
 789               		.cfi_def_cfa_offset 13
 790               		.cfi_offset 26, -12
 791 001c BF93      		push r27
 792               	.LCFI25:
 793               		.cfi_def_cfa_offset 14
 794               		.cfi_offset 27, -13
 795 001e CF93      		push r28
 796               	.LCFI26:
 797               		.cfi_def_cfa_offset 15
 798               		.cfi_offset 28, -14
 799 0020 DF93      		push r29
 800               	.LCFI27:
 801               		.cfi_def_cfa_offset 16
 802               		.cfi_offset 29, -15
 803 0022 EF93      		push r30
 804               	.LCFI28:
 805               		.cfi_def_cfa_offset 17
 806               		.cfi_offset 30, -16
 807 0024 FF93      		push r31
 808               	.LCFI29:
 809               		.cfi_def_cfa_offset 18
 810               		.cfi_offset 31, -17
 811               	/* prologue: Signal */
 812               	/* frame size = 0 */
 813               	/* stack size = 17 */
 814               	.L__stack_usage = 17
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	uint8_t PrevSelectedEndpoint = Endpoint_GetCurrentEndpoint();
 815               		.loc 1 263 2 view .LVU250
 816               	.LBB160:
 817               	.LBI160:
 211:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 818               		.loc 4 250 26 view .LVU251
 819               	.LBB161:
 251:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 820               		.loc 4 253 6 view .LVU252
 821               		.loc 4 253 15 is_stmt 0 view .LVU253
 822 0026 D091 E900 		lds r29,233
 823               		.loc 4 253 21 view .LVU254
 824 002a DF70      		andi r29,lo8(15)
 825               	.LBB162:
 826               	.LBI162:
 238:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 827               		.loc 4 238 26 is_stmt 1 view .LVU255
 828               	.LBB163:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 829               		.loc 4 240 5 view .LVU256
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 830               		.loc 4 240 13 is_stmt 0 view .LVU257
 831 002c 8091 EC00 		lds r24,236
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 832               		.loc 4 240 55 view .LVU258
 833 0030 C82F      		mov r28,r24
 834 0032 C170      		andi r28,lo8(1)
 835 0034 80FD      		sbrc r24,0
 836 0036 C0E8      		ldi r28,lo8(-128)
 837               	.L51:
 838               	.LVL41:
 240:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 839               		.loc 4 240 55 view .LVU259
 840               	.LBE163:
 841               	.LBE162:
 842               	.LBE161:
 843               	.LBE160:
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 844               		.loc 1 265 2 is_stmt 1 view .LVU260
 845               	.LBB165:
 846               	.LBI165:
 254:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 847               		.loc 4 267 23 view .LVU261
 848               	.LBB166:
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 849               		.loc 4 270 6 view .LVU262
 850               		.loc 4 270 12 is_stmt 0 view .LVU263
 851 0038 1092 E900 		sts 233,__zero_reg__
 852               	.LVL42:
 853               		.loc 4 270 12 view .LVU264
 854               	.LBE166:
 855               	.LBE165:
 266:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USB_INT_Disable(USB_INT_RXSTPI);
 856               		.loc 1 266 2 is_stmt 1 view .LVU265
 857               	.LBB167:
 858               	.LBI167:
 148:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 859               		.loc 2 148 23 view .LVU266
 860               	.LBB168:
 150:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 861               		.loc 2 150 5 view .LVU267
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 862               		.loc 2 176 7 view .LVU268
 176:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 863               		.loc 2 176 14 is_stmt 0 view .LVU269
 864 003c 8091 F000 		lds r24,240
 865 0040 877F      		andi r24,lo8(-9)
 866 0042 8093 F000 		sts 240,r24
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 867               		.loc 2 177 7 is_stmt 1 view .LVU270
 868               	.LVL43:
 177:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 869               		.loc 2 177 7 is_stmt 0 view .LVU271
 870               	.LBE168:
 871               	.LBE167:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 268:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	GlobalInterruptEnable();
 872               		.loc 1 268 2 is_stmt 1 view .LVU272
 873               	.LBB169:
 874               	.LBI169:
 875               		.file 6 "c:\\users\\gazed\\qmk_firmware\\lib\\lufa\\lufa\\common\\common.h"
   1:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /*
   2:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****              LUFA Library
   3:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****      Copyright (C) Dean Camera, 2019.
   4:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
   5:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   dean [at] fourwalledcubicle [dot] com
   6:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****            www.lufa-lib.org
   7:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** */
   8:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
   9:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /*
  10:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   Copyright 2019  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  12:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   software and its documentation for any purpose is hereby granted
  14:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   without fee, provided that the above copyright notice appear in
  15:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   all copies and that both that the copyright notice and this
  16:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   permission notice and warranty disclaimer appear in supporting
  17:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   documentation, and that the name of the author not be used in
  18:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   advertising or publicity pertaining to distribution of the
  19:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   software without specific, written prior permission.
  20:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  21:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   The author disclaims all warranties with regard to this
  22:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   software, including all implied warranties of merchantability
  23:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   and fitness.  In no event shall the author be liable for any
  24:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   special, indirect or consequential damages or any damages
  25:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   in an action of contract, negligence or other tortious action,
  27:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   arising out of or in connection with the use or performance of
  28:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****   this software.
  29:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** */
  30:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  31:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /** \dir
  32:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  \brief Common library header files.
  33:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *
  34:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
  35:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  user applications.
  36:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  */
  37:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  38:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /** \file
  39:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *
  41:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  \copydetails Group_Common
  42:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  */
  43:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  44:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *
  47:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
  48:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  aspects of the library.
  49:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *
  50:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  @{
  51:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  */
  52:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  53:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *
  56:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h ****  */
  58:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  59:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** #ifndef __LUFA_COMMON_H__
  60:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** #define __LUFA_COMMON_H__
  61:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  62:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 	/* Macros: */
  63:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  65:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 	/* Includes: */
  66:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include <stdint.h>
  67:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include <stdbool.h>
  68:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include <string.h>
  69:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include <stddef.h>
  70:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  71:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include "Architectures.h"
  72:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include "BoardTypes.h"
  73:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include "ArchitectureSpecific.h"
  74:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include "CompilerSpecific.h"
  75:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#include "Attributes.h"
  76:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  77:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include "LUFAConfig.h"
  79:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#endif
  80:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  81:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#if defined(__cplusplus)
  83:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			extern "C" {
  84:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#endif
  85:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
  86:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 	/* Architecture specific utility includes: */
  87:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#if defined(__DOXYGEN__)
  88:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
  92:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/io.h>
  95:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/interrupt.h>
  96:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/pgmspace.h>
  97:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/eeprom.h>
  98:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/boot.h>
  99:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <math.h>
 100:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <util/delay.h>
 101:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 102:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			typedef uint8_t uint_reg_t;
 103:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 104:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 105:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 109:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include "Endianness.h"
 110:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#elif (ARCH == ARCH_UC3)
 111:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr32/io.h>
 112:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <math.h>
 113:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 114:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define PROGMEM
 116:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define pgm_read_byte(x)         *x
 117:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define strlen_P(...)            strlen(__VA_ARGS__)
 120:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			// =================================================
 121:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 122:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			typedef uint32_t uint_reg_t;
 123:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 124:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_BIG_ENDIAN
 125:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 126:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include "Endianness.h"
 127:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#elif (ARCH == ARCH_XMEGA)
 128:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/io.h>
 129:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/interrupt.h>
 130:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/pgmspace.h>
 131:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <avr/eeprom.h>
 132:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <math.h>
 133:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include <util/delay.h>
 134:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 135:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			typedef uint8_t uint_reg_t;
 136:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 137:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 138:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 139:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 140:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#define ARCH_LITTLE_ENDIAN
 141:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 142:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#include "Endianness.h"
 143:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#else
 144:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#error Unknown device architecture specified.
 145:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		#endif
 146:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 147:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 	/* Public Interface - May be used in end-application: */
 148:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		/* Macros: */
 149:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(__DOXYGEN__)
 150:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				// Obsolete, retained for compatibility with user code
 151:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define MACROS                  do
 152:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define MACROE                  while (0)
 153:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 154:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 155:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Convenience macro to determine the larger of two values.
 156:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 157:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 158:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *             multiple times.
 159:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 160:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] x  First value to compare
 161:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] y  First value to compare
 162:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 163:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \return The larger of the two input parameters
 164:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 165:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 166:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 167:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 168:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 169:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Convenience macro to determine the smaller of two values.
 170:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 171:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 172:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *             multiple times.
 173:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 174:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] x  First value to compare.
 175:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] y  First value to compare.
 176:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 177:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \return The smaller of the two input parameters
 178:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 179:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 180:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 181:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 182:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 183:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 184:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 185:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  marks around the input, converting the source into a string literal.
 186:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 187:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 188:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 189:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \return String version of the input.
 190:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 */
 191:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define STRINGIFY(x)            #x
 192:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 193:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 194:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 195:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 196:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 197:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 198:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \return String version of the expanded input.
 199:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 */
 200:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 201:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 202:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 203:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(CONCAT) || defined(__DOXYGEN__)
 204:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				/** Concatenates the given input into a single token, via the C Preprocessor.
 205:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 206:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] x  First item to concatenate.
 207:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] y  Second item to concatenate.
 208:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 209:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \return Concatenated version of the input.
 210:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 */
 211:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define CONCAT(x, y)            x ## y
 212:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 213:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				/** CConcatenates the given input into a single token after macro expansion, via the C Preproce
 214:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 215:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] x  First item to concatenate.
 216:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] y  Second item to concatenate.
 217:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 218:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \return Concatenated version of the expanded input.
 219:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 */
 220:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define CONCAT_EXPANDED(x, y)   CONCAT(x, y)
 221:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 222:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 223:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 224:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 225:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 226:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  state with unintentional side-effects.
 227:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 228:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 229:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 230:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 231:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 232:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 233:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 234:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \ingroup Group_GlobalInt
 235:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *
 236:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 237:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				 */
 238:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 239:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			#endif
 240:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 241:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 		/* Inline Functions: */
 242:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 243:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  etc.
 244:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 245:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 246:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 247:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 248:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 249:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 250:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 251:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			{
 252:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 253:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 254:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 255:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 256:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				return Byte;
 257:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			}
 258:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 259:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 260:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 261:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  may be slightly higher.
 262:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 263:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
 264:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 265:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 266:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 267:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			{
 268:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#if (ARCH == ARCH_AVR8)
 269:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 270:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				{
 271:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					_delay_ms(Milliseconds);
 272:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				}
 273:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				else
 274:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				{
 275:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					while (Milliseconds--)
 276:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					  _delay_ms(1);
 277:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				}
 278:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_UC3)
 279:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				while (Milliseconds--)
 280:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				{
 281:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 282:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 283:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				}
 284:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_XMEGA)
 285:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 286:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				{
 287:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					_delay_ms(Milliseconds);
 288:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				}
 289:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				else
 290:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				{
 291:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					while (Milliseconds--)
 292:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 					  _delay_ms(1);
 293:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				}
 294:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#endif
 295:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			}
 296:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 297:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 298:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 299:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 300:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 301:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \ingroup Group_GlobalInt
 302:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 303:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 304:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 305:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 306:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 307:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			{
 308:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				GCC_MEMORY_BARRIER();
 309:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 310:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#if (ARCH == ARCH_AVR8)
 311:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				return SREG;
 312:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_UC3)
 313:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				return __builtin_mfsr(AVR32_SR);
 314:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_XMEGA)
 315:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				return SREG;
 316:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#endif
 317:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			}
 318:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 319:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 320:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
 321:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 322:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 323:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \ingroup Group_GlobalInt
 324:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 325:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 326:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 327:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 328:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 329:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			{
 330:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				GCC_MEMORY_BARRIER();
 331:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 332:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#if (ARCH == ARCH_AVR8)
 333:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				SREG = GlobalIntState;
 334:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_UC3)
 335:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 336:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 337:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				else
 338:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 339:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_XMEGA)
 340:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				SREG = GlobalIntState;
 341:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#endif
 342:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 343:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				GCC_MEMORY_BARRIER();
 344:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			}
 345:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 346:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 347:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *
 348:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 *  \ingroup Group_GlobalInt
 349:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			 */
 350:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 351:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			static inline void GlobalInterruptEnable(void)
 876               		.loc 6 351 23 view .LVU273
 877               	.LBB170:
 352:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 			{
 353:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				GCC_MEMORY_BARRIER();
 878               		.loc 6 353 5 view .LVU274
 879               		.loc 6 353 25 view .LVU275
 354:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 355:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#if (ARCH == ARCH_AVR8)
 356:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				sei();
 880               		.loc 6 356 5 view .LVU276
 881               	/* #APP */
 882               	 ;  356 "c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h" 1
 883 0046 7894      		sei
 884               	 ;  0 "" 2
 357:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_UC3)
 358:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 359:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#elif (ARCH == ARCH_XMEGA)
 360:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				sei();
 361:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				#endif
 362:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 
 363:c:\users\gazed\qmk_firmware\lib\lufa\lufa\common\common.h **** 				GCC_MEMORY_BARRIER();
 885               		.loc 6 363 5 view .LVU277
 886               		.loc 6 363 25 view .LVU278
 887               	/* #NOAPP */
 888               	.LBE170:
 889               	.LBE169:
 269:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 270:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USB_Device_ProcessControlRequest();
 890               		.loc 1 270 2 view .LVU279
 891 0048 0E94 0000 		call USB_Device_ProcessControlRequest
 892               	.LVL44:
 271:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 272:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 893               		.loc 1 272 2 view .LVU280
 894               	.LBB171:
 895               	.LBI171:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 896               		.loc 4 267 23 view .LVU281
 897               	.LBB172:
 898               		.loc 4 270 6 view .LVU282
 899               		.loc 4 270 12 is_stmt 0 view .LVU283
 900 004c 1092 E900 		sts 233,__zero_reg__
 901               	.LVL45:
 902               		.loc 4 270 12 view .LVU284
 903               	.LBE172:
 904               	.LBE171:
 273:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USB_INT_Enable(USB_INT_RXSTPI);
 905               		.loc 1 273 2 is_stmt 1 view .LVU285
 906               	.LBB173:
 907               	.LBI173:
  88:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 908               		.loc 2 88 23 view .LVU286
 909               	.LBB174:
  90:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 910               		.loc 2 90 5 view .LVU287
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 911               		.loc 2 116 7 view .LVU288
 116:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 912               		.loc 2 116 14 is_stmt 0 view .LVU289
 913 0050 8091 F000 		lds r24,240
 914 0054 8860      		ori r24,lo8(8)
 915 0056 8093 F000 		sts 240,r24
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 916               		.loc 2 117 7 is_stmt 1 view .LVU290
 917               	.LVL46:
 117:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 918               		.loc 2 117 7 is_stmt 0 view .LVU291
 919               	.LBE174:
 920               	.LBE173:
 274:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	Endpoint_SelectEndpoint(PrevSelectedEndpoint);
 921               		.loc 1 274 2 is_stmt 1 view .LVU292
 922               	.LBB175:
 923               	.LBI175:
 267:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 924               		.loc 4 267 23 view .LVU293
 925               	.LBB176:
 926               		.loc 4 270 6 view .LVU294
 927               	.LBE176:
 928               	.LBE175:
 929               	.LBB178:
 930               	.LBB164:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 931               		.loc 4 253 44 is_stmt 0 view .LVU295
 932 005a CD2B      		or r28,r29
 933               	.LVL47:
 253:lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 934               		.loc 4 253 44 view .LVU296
 935               	.LBE164:
 936               	.LBE178:
 937               	.LBB179:
 938               	.LBB177:
 939               		.loc 4 270 23 view .LVU297
 940 005c CF70      		andi r28,lo8(15)
 941               	.LVL48:
 942               		.loc 4 270 12 view .LVU298
 943 005e C093 E900 		sts 233,r28
 944               	/* epilogue start */
 945               		.loc 4 270 12 view .LVU299
 946               	.LBE177:
 947               	.LBE179:
 275:lib/lufa/LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
 948               		.loc 1 275 1 view .LVU300
 949 0062 FF91      		pop r31
 950 0064 EF91      		pop r30
 951 0066 DF91      		pop r29
 952 0068 CF91      		pop r28
 953 006a BF91      		pop r27
 954 006c AF91      		pop r26
 955 006e 9F91      		pop r25
 956 0070 8F91      		pop r24
 957 0072 7F91      		pop r23
 958 0074 6F91      		pop r22
 959 0076 5F91      		pop r21
 960 0078 4F91      		pop r20
 961 007a 3F91      		pop r19
 962 007c 2F91      		pop r18
 963 007e 0F90      		pop r0
 964 0080 0FBE      		out __SREG__,r0
 965 0082 0F90      		pop r0
 966 0084 1F90      		pop r1
 967 0086 1895      		reti
 968               		.cfi_endproc
 969               	.LFE88:
 971               		.text
 972               	.Letext0:
 973               		.file 7 "c:\\program files\\qmk_msys\\mingw64\\avr\\include\\stdint.h"
 974               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../StdRequestType.h"
 975               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../DeviceStandardReq.h"
 976               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../USBTask.h"
 977               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../Device.h"
 978               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../AVR8/../Events.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 USBInterrupt_AVR8.c
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:4      *ABS*:000000000000003f __SREG__
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:13     .text.USB_INT_DisableAllInterrupts:0000000000000000 USB_INT_DisableAllInterrupts
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:41     .text.USB_INT_ClearAllInterrupts:0000000000000000 USB_INT_ClearAllInterrupts
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:64     .text.__vector_10:0000000000000000 __vector_10
C:\Users\gazed\AppData\Local\Temp\ccqPiKPf.s:740    .text.__vector_11:0000000000000000 __vector_11

UNDEFINED SYMBOLS
EVENT_USB_Device_StartOfFrame
USB_DeviceState
EVENT_USB_Device_Connect
EVENT_USB_Device_Suspend
USB_Device_ConfigurationNumber
EVENT_USB_Device_WakeUp
Endpoint_ConfigureEndpoint_Prv
EVENT_USB_Device_Reset
EVENT_USB_Device_Disconnect
USB_Device_ProcessControlRequest
